% ./kyoto.saty と同じテーマを使っているが、
% テーマの一部パラメータをユーザが書き換える例。

@require: figbox/figbox
@require: enumitem/enumitem
@require: base/color-ext
@require: easytable/easytable
@require: math
@require: colorbox/colorbox
@require: bibyfi/bibyfi-IEEETran

@import: ./kyoto
@import: ./bib

open FigBox
open SlydifiOverlay
open EasyTableAlias
open EnumitemAlias
open Colorbox

let-inline ctx \cjk it =
  let ctx = ctx |> set-dominant-narrow-script Kana in
  read-inline ctx it

let-inline ctx \cmark = 
  let ctx = ctx |> set-font Kana           (`fonts-noto-sans-cjk-jp:NotoSansCJKjp-Bold`, 1.0, 0.0)
                |> set-text-color (Color.of-css `green`) in
    read-inline ctx {\cjk{✓}}

let-inline ctx \xmark = 
  let ctx = ctx |> set-font Kana           (`fonts-noto-sans-cjk-jp:NotoSansCJKjp-Bold`, 1.0, 0.0)
                |> set-text-color (Color.of-css `red`) in
    read-inline ctx {\cjk{×}}

let-block ctx +small content = 
  let ctx = ctx |> set-font-size 20pt in
    read-block ctx content

let-inline ctx \small it = 
  let ctx = ctx |> set-font-size 20pt in
    read-inline ctx it

let-block ctx +big it = 
  let ctx = ctx |> set-font-size 32pt in
    read-block ctx it

let-inline ctx \matches it = 
  let ctx = ctx |> set-font Latin          (`fonts-noto-sans:NotoSans-Bold`, 1.0, 0.0)
                |> set-text-color (Color.of-css `green`) in
   read-inline ctx it

let bibyfi-theme = BiByFiIEEETran.theme (|
    name-shrink = true;
    et-al = true;
    journal-abbr = [(`European Association for Signal Processing`, `EUSIPCO`)];
  |)
in

let fancy-config = (|
  SlydifiThemeKyoto.default-config with  % 下に書いたフィールド以外はデフォルト値を使う
    footer-right = {M.Waga};
    enable-total-pagenum = false;
|)

in

document '<

  +set-config(fancy-config);

  +make-title(|
    title = {|\SLyDIFi; Kyoto-theme Demo|};
    author = {|Masaki Waga|};
    affiliation = {||};
    date = {| 2023 December 26th |};
    logo-path = None;
    logo-width = 185pt;
  |);

  +frame?:(2){\SATySFi; Confを後日追ったときの感想}<
    +big<
      +p{\br;}
      +center {|「色々面白いけど、そもそもここ最近|\SATySFi; を全く使っていないな…」|}
      +p{\br;}
      +right?:(only 2){|\cjk{→} スライドでも作ってみるか|}
    >
  >

  +frame{slydifi-kyoto-theme}<
    +listing {
      * 普段使っているのと同じような theme を組んでみた
      ** 実は普段は4:3のスライドを使っているというのは秘密
      * ロゴの画像を指定したりfooterも設定したりできる
      * ドキュメントは…間に合わないので (多分) 後で書きます…
    }
  >

  +section{|ここからは|「こういうものが書ける」|という例|}<
  +frame{文字列パターンマッチング}<
    +listing{
      * 入力
        ** 文字列: "Nobady knows now"
        ** パターン: "now"
      * マッチング結果: Nobady k\matches{now}s \matches{now}
    }
  >

  +frame{文字列パターンマッチング}<
    +small <
      +easytable?:[v(1);t;b;m(1)][c;c;c;c;c;c;c;c;c;c;c;c;c;c;c;c;c] {
|         | N | o | b | a | d | y |   | k | \matches{n} | \matches{o} | \matches{w} | s |   | \matches{n} | \matches{o} | \matches{w}
| \xmark; | n | o | w |   |   |   |   |   |   |   |   |   |   |   |   | 
| \xmark; |   | n | o | w |   |   |   |   |   |   |   |   |   |   |   |   
% | \xmark; |   |   | n | o | w |   |   |   |   |   |   |   |   |   |   |   
|         |   |   |   |   |   |   | ${\vdots}|   |   |   |   |   |   |   |   |   
% | \xmark; |   |   |   | n | o | w |   |   |   |   |   |   |   |   |   |   
% | \xmark; |   |   |   |   | n | o | w |   |   |   |   |   |   |   |   |   
% | \xmark; |   |   |   |   |   | n | o | w |   |   |   |   |   |   |   |   
% | \xmark; |   |   |   |   |   |   | n | o | w |   |   |   |   |   |   |   
% | \xmark; |   |   |   |   |   |   |   | n | o | w |   |   |   |   |   |   
| \cmark; |   |   |   |   |   |   |   |   | \matches{n} | \matches{o} | \matches{w} |   |   |   |   |   
| \xmark; |   |   |   |   |   |   |   |   |   | n | o | w |   |   |   | 
|         |   |   |   |   |   |   | ${\vdots}|   |   |   |   |   |   |   |  |
% | \xmark; |   |   |   |   |   |   |   |   |   |   | n | o | w |   |   |   |
% | \xmark; |   |   |   |   |   |   |   |   |   |   |   | n | o | w |   |   |
| \xmark; |   |   |   |   |   |   |   |   |   |   |   |   | n | o | w |   
| \cmark; |   |   |   |   |   |   |   |   |   |   |   |   |   | \matches{n} | \matches{o} | \matches{w}
      |}
    >
  >

  +frame{文字列マッチングの「読み飛ばし」}<
    +Colorbox.colorbox [drop-shadow; colframe (Color.of-css `#081F57`); colback (Color.of-css `#081F57`)] <
      +center {|\reverse-color{Idea: 事前にパターンを解析して、不要なマッチングを飛ばす}|}
    >
    +itemize(bullet) <
      +item {不要なマッチング：飛ばしても結果が変わらない} <>
      +item {事前にパターンを解析して、} <
        +item ?:(dot-arabic) {不要なマッチングの情報をテーブルとして計算し} <>
        +item ?:(dot-arabic) {マッチング時にテーブルを引きながら不要なマッチングを飛ばす} <>
      >
      +item {数多くのアルゴリズムが知られている} <
        +item ?:(text-label {例：}) {Quick search \cite[`Sunday90`];}<>
      >
    >
  >
  >

  +section{|Appendix|}<
    +frame{このdemoで使っている主なパッケージ} <
      +listing {
        * 量的な意味論を入れたい気がする
        ** マッチする or しないの質的な意味から「マッチ度合い」へ
        ** 単語単位では cosine 類似度をそのまま使いそう
        ** どう aggregate するのが良いかがわからない
        ** symbolic weighted automataか
      }
    >
  >

  +frame{References}<
    +makebibliography ?:(|sort-references=true; citestyle=CiteAsAuthorsPlus; name-shrink=true;|) (bibyfi-theme)(bibs);
  >
>
